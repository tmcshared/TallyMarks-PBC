{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/shared/constant/message.ts","../../src/shared/constant/request/xmlRequest.ts","../../src/shared/constant/config.ts","../../src/pages/login/login.ts","../../src/shared/constant/request/xmlAccountRequest.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { IonicPageModule } from \"ionic-angular\";\r\nimport { LoginPage } from \"./login\";\r\n\r\n@NgModule({\r\n  declarations: [LoginPage],\r\n  imports: [IonicPageModule.forChild(LoginPage)]\r\n})\r\nexport class LoginPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","export  const RESPONSE_MESSAGE={\r\n    ERROR:\"Something went wrong\",\r\n    INVALID_CREDENTIAL:\"Username or password is incorrect\",\r\n    LOADING:\"Processing...\",\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/constant/message.ts","export const XML_REQUEST = {\r\n  WRAPPER: body => {\r\n    return `<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n                <Body>\r\n                    ${body}\r\n                 </Body>\r\n            </Envelope>`;\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/constant/request/xmlRequest.ts","const API = \"http://155.135.3.71/Services\";\r\n\r\n\r\nexport const URL = {\r\n  LOGIN: API + \"/UserAuthentication.asmx?wsdl\",\r\n  PRODUCTION: API + \"/GetOperations.asmx?wsdl\",\r\n  REJECTION: API + \"/RejectionsOperations.asmx?wsdl\",\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/constant/config.ts","import { Component } from \"@angular/core\";\nimport { NavController, MenuController, IonicPage } from \"ionic-angular\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { NetworkManagerService } from \"./../../services/network-manager.service\";\nimport { UtilityService } from \"./../../services/utility.service\";\nimport { RESPONSE_MESSAGE } from \"../../shared/constant/message\";\nimport { Storage } from '@ionic/storage';\nimport { ACCOUNT_REQUEST } from \"../../shared/constant/request/xmlAccountRequest\";\nimport { URL } from \"../../shared/constant/config\";\n@IonicPage()\n@Component({\n  selector: \"page-login\",\n  templateUrl: \"login.html\"\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n\n  constructor(\n    private storage: Storage,\n    public nav: NavController,\n    private service: NetworkManagerService,\n    public menu: MenuController,\n    private utility: UtilityService\n  ) {\n    this.menu.swipeEnable(false);\n  }\n\n  ngOnInit() {\n    this.InitializeForm();\n  }\n\n  InitializeForm() {\n    this.loginForm = new FormGroup({\n      userName: new FormControl(null, [Validators.required]),\n      userPassword: new FormControl(null, [Validators.required])\n    });\n  }\n  authenticateUser() {\n    const data = this.loginForm.value;\n    const spinner = this.utility.createLoader(RESPONSE_MESSAGE.LOADING);\n    spinner.present();\n    this.service.post(URL.LOGIN, ACCOUNT_REQUEST.LOGIN(data)).subscribe(\n      response => {\n        spinner.dismiss();\n        response = JSON.parse(response.UserLoginResponse[0].UserLoginResult[0]);\n        if (response) {\n          this.storage.set(\"IsAuthenticated\", \"true\");\n          this.nav.setRoot(\"TabsPage\");\n        } else {\n          this.utility\n            .createToast(RESPONSE_MESSAGE.INVALID_CREDENTIAL, 3000)\n            .present();\n        }\n      },\n      error => {\n        spinner.dismiss();\n        this.utility.createToast(RESPONSE_MESSAGE.ERROR, 3000).present();\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { XML_REQUEST } from \"./xmlRequest\";\r\n\r\nexport const ACCOUNT_REQUEST = {\r\n  LOGIN: data => {\r\n    return XML_REQUEST.WRAPPER(`<UserLogin xmlns=\"http://tempuri.org/\">\r\n                  <userName>${data.userName}</userName>\r\n                  <userPassword>${data.userPassword}</userPassword>\r\n              </UserLogin>`);\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/constant/request/xmlAccountRequest.ts"],"sourceRoot":""}